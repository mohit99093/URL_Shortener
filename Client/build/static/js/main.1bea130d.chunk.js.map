{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","encode","decode","encodeState","setencodeState","decodeState","setdecodeState","encodeinput","a","fetch","method","body","JSON","stringify","value","headers","then","res","json","status","compressString","alert","message","decodeinput","decompressString","className","class","id","type","placeholder","onChange","e","target","aria-describedby","disabled","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA2FeA,MAxFf,WAAgB,IAAD,EACwBC,mBAAS,CAAEC,OAAQ,GAAIC,OAAQ,KADvD,mBACPC,EADO,KACMC,EADN,OAEwBJ,mBAAS,CAAEC,OAAQ,GAAIC,OAAQ,KAFvD,mBAEPG,EAFO,KAEMC,EAFN,KAGRC,EAAW,uCAAG,sBAAAC,EAAA,sEACbC,MAAM,aAAc,CACzBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,MAAOX,EAAYF,SAC1Cc,QAAS,CACR,eAAgB,sBAGhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEc,MAAfA,EAAIE,OACPf,EAAe,2BAAKD,GAAN,IAAmBD,OAAQe,EAAIG,kBAE7CC,MAAMJ,EAAIK,YAdM,2CAAH,qDAkBXC,EAAW,uCAAG,sBAAAf,EAAA,sEACbC,MAAM,cAAe,CAC1BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,MAAOT,EAAYH,SAC1Ca,QAAS,CACR,eAAgB,sBAGhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEc,MAAfA,EAAIE,OACPb,EAAe,2BAAKD,GAAN,IAAmBJ,OAAQgB,EAAIO,oBAE7CH,MAAMJ,EAAIK,YAdM,2CAAH,qDAkBjB,OACC,mCACC,sBAAKG,UAAU,MAAf,UACC,oBAAIA,UAAU,OAAd,2BACA,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,SAAf,UACC,sBAAKC,MAAM,mBAAX,UACC,sBAAMA,MAAM,mBAAmBC,GAAG,eAAlC,iBAGA,uBAAOC,KAAK,OAAOF,MAAM,eAAeG,YAAY,gBAAgBf,MAAOX,EAAYF,OAAQ6B,SAAU,SAAAC,GAAC,OAAI3B,EAAe,2BAAKD,GAAN,IAAmBF,OAAQ8B,EAAEC,OAAOlB,UAAUmB,mBAAiB,oBAE5L,sBAAKP,MAAM,mBAAX,UACC,sBAAMA,MAAM,mBAAmBC,GAAG,eAAlC,4BAGA,uBAAOC,KAAK,OAAOF,MAAM,eAAeQ,UAAQ,EAACpB,MAAOX,EAAYD,OAAQ+B,mBAAiB,oBAE9F,qBAAKR,UAAU,OAAf,SACC,wBAAQG,KAAK,SAASF,MAAM,kBAAkBS,QAAS,kBAAM5B,KAA7D,yBAKF,sBAAKkB,UAAU,SAAf,UACC,sBAAKC,MAAM,mBAAX,UACC,sBAAMA,MAAM,mBAAmBC,GAAG,eAAlC,iBAGA,uBAAOC,KAAK,OAAOF,MAAM,eAAeQ,UAAQ,EAACpB,MAAOT,EAAYJ,OAAQgC,mBAAiB,oBAE9F,sBAAKP,MAAM,mBAAX,UACC,sBAAMA,MAAM,mBAAmBC,GAAG,eAAlC,4BAGA,uBAAOC,KAAK,OAAOF,MAAM,eAAeZ,MAAOT,EAAYH,OAAQ4B,SAAU,SAAAC,GAAC,OAAIzB,EAAe,2BAAKD,GAAN,IAAmBH,OAAQ6B,EAAEC,OAAOlB,UAAUmB,mBAAiB,oBAEhK,qBAAKR,UAAU,OAAf,SACC,wBAAQG,KAAK,SAASF,MAAM,iBAAiBS,QAAS,kBAAMZ,KAA5D,kCCpEQa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1bea130d.chunk.js","sourcesContent":["import { useState } from 'react'\nimport './App.css'\n\nfunction App() {\n\tconst [encodeState, setencodeState] = useState({ encode: '', decode: '' })\n\tconst [decodeState, setdecodeState] = useState({ encode: '', decode: '' })\n\tconst encodeinput = async () => {\n\t\tawait fetch('api/encode', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ value: encodeState.encode }),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\t// console.log(res)\n\t\t\t\tif (res.status === 201) {\n\t\t\t\t\tsetencodeState({ ...encodeState, decode: res.compressString })\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message)\n\t\t\t\t}\n\t\t\t})\n\t}\n\tconst decodeinput = async () => {\n\t\tawait fetch('/api/decode', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ value: decodeState.decode }),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\t// console.log(res)\n\t\t\t\tif (res.status === 201) {\n\t\t\t\t\tsetdecodeState({ ...decodeState, encode: res.decompressString })\n\t\t\t\t} else {\n\t\t\t\t\talert(res.message)\n\t\t\t\t}\n\t\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2 className=\"mb-5\">URL Shortener</h2>\n\t\t\t\t<div className=\"fun\">\n\t\t\t\t\t<div className=\"encode\">\n\t\t\t\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t\t\t\tURL\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"only alphbets\" value={encodeState.encode} onChange={e => setencodeState({ ...encodeState, encode: e.target.value })} aria-describedby=\"basic-addon1\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t\t\t\tCompressed URL\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" disabled value={encodeState.decode} aria-describedby=\"basic-addon1\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"btns\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick={() => encodeinput()}>\n\t\t\t\t\t\t\t\tEncode\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"decode\">\n\t\t\t\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t\t\t\tURL\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" disabled value={decodeState.encode} aria-describedby=\"basic-addon1\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">\n\t\t\t\t\t\t\t\tCompressed URL\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" value={decodeState.decode} onChange={e => setdecodeState({ ...decodeState, decode: e.target.value })} aria-describedby=\"basic-addon1\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"btns\">\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" onClick={() => decodeinput()}>\n\t\t\t\t\t\t\t\tDecode\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}